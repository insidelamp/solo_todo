{"version":3,"file":"static/js/261.2d98a20c.chunk.js","mappings":"yMAMA,I,8BAAA,EAJA,WACE,OAAO,kDACR,E,kEC0BYA,EAAa,SAACC,EAAKC,EAAIC,GAClCC,QAAQC,IAAIJ,EAAKC,GACjBI,MAAM,GAAD,OAAIL,GAAJ,OAAUC,GAAM,CACnBK,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAACT,GACLC,QAAQC,IAAIF,EACb,IACAU,OAAM,SAACC,GACNV,QAAQU,MAAM,QAASA,EACxB,GACJ,ECkGD,I,kBAAMC,EAAYC,EAAAA,GAAAA,IAAH,yKASTC,EAAWD,EAAAA,GAAAA,MAAH,6EAKRE,EAAmBF,EAAAA,GAAAA,IAAH,uIAQhBG,EAAoBH,EAAAA,GAAAA,IAAH,2LAUjBI,EAAmBJ,EAAAA,GAAAA,IAAH,6KAShBK,EAAkBL,EAAAA,GAAAA,IAAH,6KASfM,EAAuBN,EAAAA,GAAAA,IAAH,+MAUpBO,EAAeP,EAAAA,GAAAA,IAAH,6HAOZQ,EAAgBR,EAAAA,GAAAA,IAAH,6KAUbS,EAAqBT,EAAAA,GAAAA,IAAH,wJASlBU,EAAUV,EAAAA,GAAAA,OAAH,4GAOPW,EAAaX,EAAAA,GAAAA,IAAH,wPAaVY,EAAmBZ,EAAAA,GAAAA,GAAH,sBAEhBa,EAAkBb,EAAAA,GAAAA,MAAH,2EAMfc,EAAiBd,EAAAA,GAAAA,OAAH,oFAMpB,EAlQA,YAAmC,IAAnBe,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACrB,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA0CJ,EAAAA,EAAAA,UAAS,IAAnD,eAAOK,EAAP,KAAsBC,EAAtB,KACA,GAAwBN,EAAAA,EAAAA,UAAS,IAAjC,eAAOO,EAAP,KAAaC,EAAb,KACA,GAA8BR,EAAAA,EAAAA,WAAS,GAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KA2CMC,EAAa,SAAC1C,IDlCK,SAACD,EAAKC,GAC/BI,MAAM,GAAD,OAAIL,EAAJ,YAAWC,GAAM,CACpBK,OAAQ,WAEPK,MAAK,SAACT,GACLC,QAAQC,IAAIF,EAEb,IACAU,OAAM,SAACC,GACNV,QAAQU,MAAM,QAASA,EACxB,GACJ,CCwBG+B,CAAY,8BAA+B3C,GAC3C8B,GACD,EAEKc,EAAc,SAAC5C,GACnBiC,GAAgBD,GAChBO,EAAQvC,GACR8B,GACD,EACD,OACE,8BACGE,GACC,UAACnB,EAAD,CAAWgC,QAASD,EAApB,iBACGf,QADH,IACGA,OADH,EACGA,EAAOiB,KAAI,SAAC7C,GAAD,OACV,UAACgB,EAAD,YACE,UAACD,EAAD,YACE,SAACE,EAAD,UAAmBjB,EAAK8C,QACvB9C,EAAK+C,OACJ,SAAC5B,EAAD,UAAuBnB,EAAKM,QAE5B,SAACY,EAAD,UAAkBlB,EAAKM,WAG3B,UAACc,EAAD,YACE,SAACC,EAAD,UAAgBrB,EAAKgD,WACrB,SAAC3B,EAAD,UAAgBrB,EAAKiD,WACrB,UAAC3B,EAAD,YACE,SAACC,EAAD,CAASqB,QAASD,EAAlB,2BACA,SAACpB,EAAD,CAASqB,QAASH,EAAlB,kCAdkBzC,EAAKD,GADnB,KAoBZ,UAACyB,EAAD,CAAYoB,QAAS,SAACM,GAAD,OAAOA,EAAEC,iBAAT,EAArB,WACE,SAAC1B,EAAD,0DACA,SAACC,EAAD,CACE0B,YAAY,oFACZC,SAAU,SAACH,GAAD,OAAOhB,EAAegB,EAAEI,OAAOC,MAA/B,KAEZ,SAAC9B,EAAD,0DACA,SAACC,EAAD,CACE0B,YAAY,oFACZC,SAAU,SAACH,GAAD,OAAOd,EAAiBc,EAAEI,OAAOC,MAAjC,KAEZ,SAAC5B,EAAD,CACEiB,QAAS,YAvFF,WACjB,IAAIY,EAAM,IAAIC,KACVT,EAAUQ,EAAIE,cACdC,EAAWH,EAAII,WAAa,EAC5BX,EAAUO,EAAIK,UAGdC,EAAY,CACd/D,GAHe6B,EAAMmC,QAAO,SAACC,GAAD,OAAQA,EAAGjE,KAAOsC,CAAlB,IAGbtC,GACf+C,MAAOb,EACP3B,KAAM6B,EACNa,QAASA,EAAU,IAAMW,EAAW,IAAMV,EAC1CA,SAAS,IAAIQ,MAAOQ,sBAEtBpE,EAAW,8BAA+BwC,EAAMyB,EACjD,CAyEaI,GACAvB,GACD,EAJH,iCAWJ,SAAC/B,EAAD,iBACGgB,QADH,IACGA,OADH,EACGA,EAAOiB,KAAI,SAAC7C,GAAD,OACV,UAACgB,EAAD,YACE,SAACF,EAAD,CACEqD,KAAK,WACLd,SAAU,SAACH,GAAD,OAAOA,EAAEI,OAAOc,OAAhB,EACVxB,QAAS,YAtFC,SAAC7C,EAAIwC,GAC3B,IAAIiB,EAAM,IAAIC,KACVT,EAAUQ,EAAIE,cACdC,EAAWH,EAAII,WAAa,EAC5BX,EAAUO,EAAIK,UACdQ,EAAazC,EAAMmC,QAAO,SAACC,GAAD,OAAQA,EAAGjE,KAAOA,CAAlB,IAG5ByC,GADED,GAMJ,IAAIuB,EAAY,CACd/D,GAAIsE,EAAW,GAAGtE,GAClB+C,MAAOuB,EAAW,GAAGvB,MACrBxC,KAAM+D,EAAW,GAAG/D,KACpB0C,QAASA,EAAU,IAAMW,EAAW,IAAMV,EAC1CA,SAAS,IAAIQ,MAAOQ,qBACpBlB,MAAOR,GAET1C,EAAW,8BAA+BE,EAAI+D,GAC9CjC,GACD,CAgEeyC,CAAgBtE,EAAKD,GAAIwC,EAC1B,KAEH,UAACxB,EAAD,YACE,SAACE,EAAD,UAAmBjB,EAAK8C,QACvB9C,EAAK+C,OACJ,SAAC5B,EAAD,UAAuBnB,EAAKM,QAE5B,SAACY,EAAD,UAAkBlB,EAAKM,WAG3B,UAACc,EAAD,YACE,SAACC,EAAD,UAAgBrB,EAAKgD,WACrB,SAAC3B,EAAD,UAAgBrB,EAAKiD,WACrB,UAAC3B,EAAD,YACE,SAACC,EAAD,CAASqB,QAAS,kBAAMD,EAAY3C,EAAKD,GAAvB,EAAlB,2BACA,SAACwB,EAAD,CAASqB,QAAS,kBAAMH,EAAWzC,EAAKD,GAAtB,EAAlB,kCArBkBC,EAAKD,GADnB,OA+BrB,E,SCxGD,EAjCiB,SAACD,GAChB,OAAwBgC,EAAAA,EAAAA,UAAS,MAAjC,eAAO9B,EAAP,KAAauE,EAAb,KACA,GAAkCzC,EAAAA,EAAAA,WAAS,GAA3C,eAAO0C,EAAP,KAAkBC,EAAlB,KACA,GAA0B3C,EAAAA,EAAAA,UAAS,MAAnC,eAAOnB,EAAP,KAAc+D,EAAd,KACA,GAA4B5C,EAAAA,EAAAA,UAAS,GAArC,eAAO6C,EAAP,KAAeC,EAAf,KA0BA,OAnBAC,EAAAA,EAAAA,YAAU,WACR1E,MAAML,GACHW,MAAK,SAACqE,GACL,IAAKA,EAAIC,GACP,MAAMC,MAAM,8CAEd,OAAOF,EAAIG,MACZ,IACAxE,MAAK,SAACT,GACLyE,GAAa,GACbF,EAAQvE,GACR0E,EAAS,KACV,IACAhE,OAAM,SAACwE,GACNT,GAAa,GACbC,EAASQ,EAAIC,QACd,GACJ,GAAE,CAACR,IAEG,CAAC3E,EAAMwE,EAAW7D,EAxBT,WACd4D,GAAQ,OAAIvE,IACZ4E,EAAUnB,KAAKD,MAChB,EAsBF,EC6CD,IAAM4B,EAAWvE,EAAAA,GAAAA,IAAH,wNAOYwE,GAGpBC,GAAYzE,EAAAA,GAAAA,IAAH,yDAIT0E,GAAmB1E,EAAAA,GAAAA,IAAH,mOAYhB2E,GAAY3E,EAAAA,GAAAA,GAAH,kKAST4E,GAAa5E,EAAAA,GAAAA,OAAH,wIASVW,GAAaX,EAAAA,GAAAA,IAAH,6NAYVY,GAAmBZ,EAAAA,GAAAA,GAAH,sBAEhBa,GAAkBb,EAAAA,GAAAA,MAAH,2EAMfc,GAAiBd,EAAAA,GAAAA,OAAH,oFAMpB,GA5IA,WACE,MAA2C6E,EACzC,+BADF,eAAO9D,EAAP,KAAgCC,GAAhC,gBAIA,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAO6D,EAAP,KAAeC,EAAf,KACA,GAAsC9D,EAAAA,EAAAA,UAAS,IAA/C,eAAO+D,EAAP,KAAoBC,EAApB,KACA,GAAkChE,EAAAA,EAAAA,UAAS,IAA3C,eAAOiE,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,WACdL,GAAWD,EACZ,EAkBD,OACE,UAACP,EAAD,YACE,SAACE,GAAD,IACCK,GACC,UAACJ,GAAD,CAAkB3C,QAASqD,EAA3B,WACE,SAACT,GAAD,sBACA,SAAC,EAAD,CAAM5D,MAAOA,KACb,UAAC,GAAD,CACEgB,QAAS,SAACM,GACRA,EAAEC,iBACH,EAHH,WAKE,SAAC,GAAD,uCACA,SAAC,GAAD,CACEC,YAAY,iEACZC,SAAU,SAACH,GAAD,OAAO8C,EAAa9C,EAAEI,OAAOC,MAA7B,KAEZ,SAAC,GAAD,uCACA,SAAC,GAAD,CACEH,YAAY,iEACZC,SAAU,SAACH,GAAD,OAAO4C,EAAe5C,EAAEI,OAAOC,MAA/B,KAEZ,SAAC,GAAD,CAAgBX,QAtCL,WACnB,IAAIY,EAAM,IAAIC,KACVT,EAAUQ,EAAIE,cACdC,EAAWH,EAAII,WAAa,EAC5BX,EAAUO,EAAIK,WHtBK,SAAC/D,EAAKE,GAC/BG,MAAML,EAAK,CACTM,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAACT,GACLC,QAAQC,IAAIF,EACb,IACAU,OAAM,SAACC,GACNV,QAAQU,MAAM,QAASA,EACxB,GACJ,CGiBGuF,CAAY,8BANC,CACXpD,MAAOiD,EACPzF,KAAMuF,EACN7C,QAASA,EAAU,IAAMW,EAAW,IAAMV,EAC1CA,SAAS,IAAIQ,MAAOQ,uBAGtBgC,IACApE,GACD,EAwBS,8BAEF,SAAC,EAAD,QAGF,UAAC0D,GAAD,YACE,SAACC,GAAD,sBACA,SAAC,EAAD,CAAM5D,MAAOA,EAAOC,QAASA,KAE7B,SAAC4D,GAAD,CAAY7C,QAASqD,EAArB,2BACA,SAAC,EAAD,QAIJ,SAACX,GAAD,MAGL,C","sources":["components/Footer.js","api/api.js","components/ToDo.js","CutomComponent/useFetch.js","pages/ToDoList.js"],"sourcesContent":["import React from \"react\";\n\nfunction Footer() {\n  return <div>By 임세영</div>;\n}\n\nexport default Footer;\n","const BASE_URL = \"http://localhost:3000/\";\n\n//추가\nexport const fetchCreate = (url, data) => {\n  fetch(url, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  })\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((error) => {\n      console.error(\"Error\", error);\n    });\n};\n//삭제\nexport const fetchDelete = (url, id) => {\n  fetch(`${url}/${id}`, {\n    method: \"DELETE\",\n  })\n    .then((data) => {\n      console.log(data);\n      // data.filter((el) => el.id == id);\n    })\n    .catch((error) => {\n      console.error(\"Error\", error);\n    });\n};\n// 수정\nexport const fetchPatch = (url, id, data) => {\n  console.log(url, id);\n  fetch(`${url}${id}`, {\n    method: \"PATCH\",\n    headers: { \"Content-Type\": \"Application/json\" },\n    body: JSON.stringify(data),\n  })\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((error) => {\n      console.error(\"Error\", error);\n    });\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { fetchDelete, fetchPatch } from \"../api/api\";\nfunction ToDo({ datas, refetch }) {\n  const [updataModal, setUpdataModal] = useState(false);\n  const [updataTitle, setUpdataTitle] = useState(\"\");\n  const [updataContent, setUpdataContent] = useState(\"\");\n  const [upId, setUpId] = useState(\"\");\n  const [isCheck, setIsCheck] = useState(true);\n\n  const updateToDo = () => {\n    let now = new Date();\n    let nowYear = now.getFullYear(); // 년\n    let nowMonth = now.getMonth() + 1; // 월\n    let nowDate = now.getDate(); // 월\n    let filterData = datas.filter((el) => el.id === upId);\n\n    let fetchData = {\n      id: filterData.id,\n      title: updataTitle,\n      body: updataContent,\n      nowYear: nowYear + \".\" + nowMonth + \".\" + nowDate,\n      nowDate: new Date().toLocaleTimeString(),\n    };\n    fetchPatch(`http://localhost:3001/memo/`, upId, fetchData);\n  };\n\n  const updateCheckToDo = (id, isCheck) => {\n    let now = new Date();\n    let nowYear = now.getFullYear(); // 년\n    let nowMonth = now.getMonth() + 1; // 월\n    let nowDate = now.getDate(); // 월\n    let filterData = datas.filter((el) => el.id === id);\n\n    if (isCheck) {\n      setIsCheck(false);\n    } else {\n      setIsCheck(true);\n    }\n\n    let fetchData = {\n      id: filterData[0].id,\n      title: filterData[0].title,\n      body: filterData[0].body,\n      nowYear: nowYear + \".\" + nowMonth + \".\" + nowDate,\n      nowDate: new Date().toLocaleTimeString(),\n      check: isCheck,\n    };\n    fetchPatch(`http://localhost:3001/memo/`, id, fetchData);\n    refetch();\n  };\n  const deleteToDo = (id) => {\n    fetchDelete(\"http://localhost:3001/memo/\", id);\n    refetch();\n  };\n\n  const updateModal = (id) => {\n    setUpdataModal(!updataModal);\n    setUpId(id);\n    refetch();\n  };\n  return (\n    <>\n      {updataModal ? (\n        <ToDoSpace onClick={updateModal}>\n          {datas?.map((data) => (\n            <ToDoSpaceContents key={data.id}>\n              <ToDoSpaceContent>\n                <ToDoContentTitle>{data.title}</ToDoContentTitle>\n                {data.check ? (\n                  <ToDoContentBodyCheck>{data.body}</ToDoContentBodyCheck>\n                ) : (\n                  <ToDoContentBody>{data.body}</ToDoContentBody>\n                )}\n              </ToDoSpaceContent>\n              <ToDoBtnSpace>\n                <ToDoDateSpace>{data.nowYear}</ToDoDateSpace>\n                <ToDoDateSpace>{data.nowDate}</ToDoDateSpace>\n                <ToDoBtnInteraction>\n                  <ToDoBtn onClick={updateModal}>수정</ToDoBtn>\n                  <ToDoBtn onClick={deleteToDo}>삭제</ToDoBtn>\n                </ToDoBtnInteraction>\n              </ToDoBtnSpace>\n            </ToDoSpaceContents>\n          ))}\n          <ModalSpace onClick={(e) => e.stopPropagation()}>\n            <ModalWriteTitles>수정될 ToDo 타이틀</ModalWriteTitles>\n            <ModalWriteInput\n              placeholder=\"수정할 타이틀을 작성해주세요!\"\n              onChange={(e) => setUpdataTitle(e.target.value)}\n            />\n            <ModalWriteTitles>수정될 ToDo 콘텐츠</ModalWriteTitles>\n            <ModalWriteInput\n              placeholder=\"수정할 콘텐츠를 작성해주세요!\"\n              onChange={(e) => setUpdataContent(e.target.value)}\n            />\n            <ModalSubmitBtn\n              onClick={() => {\n                updateToDo();\n                updateModal();\n              }}\n            >\n              제출\n            </ModalSubmitBtn>\n          </ModalSpace>\n        </ToDoSpace>\n      ) : (\n        <ToDoSpace>\n          {datas?.map((data) => (\n            <ToDoSpaceContents key={data.id}>\n              <CheckBox\n                type=\"checkbox\"\n                onChange={(e) => e.target.checked}\n                onClick={() => {\n                  updateCheckToDo(data.id, isCheck);\n                }}\n              />\n              <ToDoSpaceContent>\n                <ToDoContentTitle>{data.title}</ToDoContentTitle>\n                {data.check ? (\n                  <ToDoContentBodyCheck>{data.body}</ToDoContentBodyCheck>\n                ) : (\n                  <ToDoContentBody>{data.body}</ToDoContentBody>\n                )}\n              </ToDoSpaceContent>\n              <ToDoBtnSpace>\n                <ToDoDateSpace>{data.nowYear}</ToDoDateSpace>\n                <ToDoDateSpace>{data.nowDate}</ToDoDateSpace>\n                <ToDoBtnInteraction>\n                  <ToDoBtn onClick={() => updateModal(data.id)}>수정</ToDoBtn>\n                  <ToDoBtn onClick={() => deleteToDo(data.id)}>삭제</ToDoBtn>\n                </ToDoBtnInteraction>\n              </ToDoBtnSpace>\n            </ToDoSpaceContents>\n          ))}\n        </ToDoSpace>\n      )}\n    </>\n  );\n}\n\nconst ToDoSpace = styled.div`\n  width: 90%;\n  height: 100%;\n  display: flex;\n  margin-top: 20px;\n  flex-direction: column;\n  align-items: center;\n  overflow-y: scroll;\n`;\nconst CheckBox = styled.input`\n  margin: 0px 5px;\n  width: 30px;\n  height: 30px;\n`;\nconst ToDoSpaceContent = styled.div`\n  width: 60%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst ToDoSpaceContents = styled.div`\n  border: 3px solid blue;\n  border-radius: 5px;\n  width: 90%;\n  margin: 10px 0px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ToDoContentTitle = styled.div`\n  border: 1px solid black;\n  border-radius: 10px;\n  margin-left: 5px;\n  height: 40%;\n  width: 95%;\n  color: blue;\n  padding: 5px 0px 0px 5px;\n`;\nconst ToDoContentBody = styled.div`\n  border: 1px solid black;\n  border-radius: 10px;\n  margin-left: 5px;\n  height: 40%;\n  width: 95%;\n  color: blue;\n  padding: 5px 0px 0px 5px;\n`;\nconst ToDoContentBodyCheck = styled.div`\n  border: 1px solid black;\n  border-radius: 10px;\n  margin-left: 5px;\n  height: 40%;\n  width: 95%;\n  color: blue;\n  padding: 5px 0px 0px 5px;\n  text-decoration: line-through;\n`;\nconst ToDoBtnSpace = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 35%;\n  height: 100%;\n`;\nconst ToDoDateSpace = styled.div`\n  width: 100%;\n  height: 20%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:nth-child(1) {\n    margin: 5px 0px;\n  }\n`;\nconst ToDoBtnInteraction = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  width: 100%;\n  height: 50%;\n  margin-top: 5px;\n`;\n\nconst ToDoBtn = styled.button`\n  width: 30px;\n  height: 30px;\n  background-color: white;\n  border-radius: 50%;\n`;\n\nconst ModalSpace = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  border: 1px solid blue;\n  width: 26%;\n  height: 30%;\n  top: 470px;\n  background-color: white;\n`;\n\nconst ModalWriteTitles = styled.h1``;\n\nconst ModalWriteInput = styled.input`\n  width: 70%;\n  height: 15%;\n  font-size: 15px;\n`;\n\nconst ModalSubmitBtn = styled.button`\n  width: 20%;\n  height: 10%;\n  background-color: violet;\n`;\n\nexport default ToDo;\n\n// 추가 모달\n// 클릭 삭제\n// 수정 모달\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [triger, setTriger] = useState(0);\n\n  const refetch = () => {\n    setData([...data]);\n    setTriger(Date.now());\n  };\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"could not fetch the data for that resource\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch((err) => {\n        setIsPending(false);\n        setError(err.message);\n      });\n  }, [triger]);\n\n  return [data, isPending, error, refetch];\n};\n\nexport default useFetch;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Footer from \"../components/Footer\";\nimport Moon from \"../img/moon-g4a048f6f2_640.jpg\";\nimport ToDo from \"../components/ToDo\";\nimport useFetch from \"../CutomComponent/useFetch\";\nimport { fetchCreate } from \"../api/api\";\n\nfunction ToDoList() {\n  const [datas, isPending, error, refetch] = useFetch(\n    \"http://localhost:3001/memo/\"\n  );\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [todoContent, setTodoContent] = useState(\"\");\n  const [todoTitle, setTodoTitle] = useState(\"\");\n\n  const addTodo = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const createSubmit = () => {\n    let now = new Date();\n    let nowYear = now.getFullYear(); // 년\n    let nowMonth = now.getMonth() + 1; // 월\n    let nowDate = now.getDate(); // 월\n    const data = {\n      title: todoTitle,\n      body: todoContent,\n      nowYear: nowYear + \".\" + nowMonth + \".\" + nowDate,\n      nowDate: new Date().toLocaleTimeString(),\n    };\n    fetchCreate(\"http://localhost:3001/memo/\", data);\n    addTodo();\n    refetch();\n  };\n\n  return (\n    <MainTodo>\n      <NoneSpace />\n      {isOpen ? (\n        <TodoContentsMain onClick={addTodo}>\n          <TodoTitle>MyToDo</TodoTitle>\n          <ToDo datas={datas} />\n          <ModalSpace\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            <ModalWriteTitles>ToDo 타이틀</ModalWriteTitles>\n            <ModalWriteInput\n              placeholder=\"타이틀을 작성해주세요!\"\n              onChange={(e) => setTodoTitle(e.target.value)}\n            />\n            <ModalWriteTitles>ToDo 콘텐츠</ModalWriteTitles>\n            <ModalWriteInput\n              placeholder=\"콘텐츠를 작성해주세요!\"\n              onChange={(e) => setTodoContent(e.target.value)}\n            />\n            <ModalSubmitBtn onClick={createSubmit}>제출</ModalSubmitBtn>\n          </ModalSpace>\n          <Footer />\n        </TodoContentsMain>\n      ) : (\n        <TodoContentsMain>\n          <TodoTitle>MyToDo</TodoTitle>\n          <ToDo datas={datas} refetch={refetch} />\n\n          <CreateToDo onClick={addTodo}>추가</CreateToDo>\n          <Footer />\n        </TodoContentsMain>\n      )}\n\n      <NoneSpace />\n    </MainTodo>\n  );\n}\n\nconst MainTodo = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  background-image: url(${Moon});\n  background-size: cover;\n`;\nconst NoneSpace = styled.div`\n  width: 33%;\n  height: 100vh;\n`;\nconst TodoContentsMain = styled.div`\n  width: 33%;\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  opacity: 0.7;\n  background-color: white;\n  position: relative;\n`;\n\nconst TodoTitle = styled.h2`\n  width: 100%;\n  height: 10%;\n  border-bottom: 3px solid violet;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CreateToDo = styled.button`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  position: absolute;\n  bottom: 50px;\n  right: 20px;\n`;\n\nconst ModalSpace = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 26%;\n  height: 30%;\n  top: 470px;\n  background-color: white;\n`;\n\nconst ModalWriteTitles = styled.h1``;\n\nconst ModalWriteInput = styled.input`\n  width: 70%;\n  height: 15%;\n  font-size: 15px;\n`;\n\nconst ModalSubmitBtn = styled.button`\n  width: 20%;\n  height: 10%;\n  background-color: violet;\n`;\n\nexport default ToDoList;\n"],"names":["fetchPatch","url","id","data","console","log","fetch","method","headers","body","JSON","stringify","then","catch","error","ToDoSpace","styled","CheckBox","ToDoSpaceContent","ToDoSpaceContents","ToDoContentTitle","ToDoContentBody","ToDoContentBodyCheck","ToDoBtnSpace","ToDoDateSpace","ToDoBtnInteraction","ToDoBtn","ModalSpace","ModalWriteTitles","ModalWriteInput","ModalSubmitBtn","datas","refetch","useState","updataModal","setUpdataModal","updataTitle","setUpdataTitle","updataContent","setUpdataContent","upId","setUpId","isCheck","setIsCheck","deleteToDo","fetchDelete","updateModal","onClick","map","title","check","nowYear","nowDate","e","stopPropagation","placeholder","onChange","target","value","now","Date","getFullYear","nowMonth","getMonth","getDate","fetchData","filter","el","toLocaleTimeString","updateToDo","type","checked","filterData","updateCheckToDo","setData","isPending","setIsPending","setError","triger","setTriger","useEffect","res","ok","Error","json","err","message","MainTodo","Moon","NoneSpace","TodoContentsMain","TodoTitle","CreateToDo","useFetch","isOpen","setIsOpen","todoContent","setTodoContent","todoTitle","setTodoTitle","addTodo","fetchCreate"],"sourceRoot":""}